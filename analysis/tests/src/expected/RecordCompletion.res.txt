Complete tests/src/RecordCompletion.res 7:3
[{
    "label": "Js.Array2.mapi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => 'b) => t<'b>",
    "documentation": null
  }, {
    "label": "Js.Array2.lastIndexOf",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.concat",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, t<'a>) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.unshiftMany",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, array<'a>) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.filter",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => t<'a>",
    "documentation": {"kind": "markdown", "value": " should we use `bool` or `boolean` seems they are intechangeable here "}
  }, {
    "label": "Js.Array2.shift",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => option<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.reduceRight",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('b, 'a) => 'b, 'b) => 'b",
    "documentation": null
  }, {
    "label": "Js.Array2.joinWith",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, string) => string",
    "documentation": null
  }, {
    "label": "Js.Array2.concatMany",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, array<t<'a>>) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.fillInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.isArray",
    "kind": 12,
    "tags": [],
    "detail": "'a => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.reduce",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('b, 'a) => 'b, 'b) => 'b",
    "documentation": null
  }, {
    "label": "Js.Array2.copy",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.reducei",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('b, 'a, int) => 'b, 'b) => 'b",
    "documentation": null
  }, {
    "label": "Js.Array2.forEachi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => unit) => unit",
    "documentation": null
  }, {
    "label": "Js.Array2.fillFromInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a, ~from: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.findi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => option<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.filteri",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.slice",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~start: int, ~end_: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.fromMap",
    "kind": 12,
    "tags": [],
    "detail": "(array_like<'a>, 'a => 'b) => array<'b>",
    "documentation": null
  }, {
    "label": "Js.Array2.removeFromInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~pos: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.from",
    "kind": 12,
    "tags": [],
    "detail": "array_like<'a> => array<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.includes",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => bool",
    "documentation": {"kind": "markdown", "value": " ES2016 "}
  }, {
    "label": "Js.Array2.find",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => option<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.reduceRighti",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('b, 'a, int) => 'b, 'b) => 'b",
    "documentation": null
  }, {
    "label": "Js.Array2.findIndexi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.toLocaleString",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => string",
    "documentation": null
  }, {
    "label": "Js.Array2.lastIndexOfFrom",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a, ~from: int) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.copyWithinFromRange",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~to_: int, ~start: int, ~end_: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.findIndex",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.removeCountInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~pos: int, ~count: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.reverseInPlace",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.every",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.length",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => int",
    "documentation": null
  }, {
    "label": "Js.Array2.indexOf",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.unshift",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.sortInPlace",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.unsafe_get",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int) => 'a",
    "documentation": null
  }, {
    "label": "Js.Array2.some",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.map",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": null
  }, {
    "label": "Js.Array2.push",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.fillRangeInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a, ~start: int, ~end_: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.pop",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => option<'a>",
    "documentation": {"kind": "markdown", "value": " https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push "}
  }, {
    "label": "Js.Array2.somei",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.append",
    "kind": 12,
    "tags": [1],
    "detail": "(t<'a>, 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "Deprecated: append is not type-safe. Use `concat` instead, and see #1884\n\n"}
  }, {
    "label": "Js.Array2.unsafe_set",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int, 'a) => unit",
    "documentation": null
  }, {
    "label": "Js.Array2.copyWithin",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~to_: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.everyi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.toString",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => string",
    "documentation": null
  }, {
    "label": "Js.Array2.spliceInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~pos: int, ~remove: int, ~add: array<'a>) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.pushMany",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, array<'a>) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.copyWithinFrom",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~to_: int, ~from: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.forEach",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => unit) => unit",
    "documentation": null
  }, {
    "label": "Js.Array2.sliceFrom",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.sortInPlaceWith",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, 'a) => int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.indexOfFrom",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a, ~from: int) => int",
    "documentation": null
  }]

Complete tests/src/RecordCompletion.res 9:3
[{
    "label": "Js.Array2.mapi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => 'b) => t<'b>",
    "documentation": null
  }, {
    "label": "Js.Array2.lastIndexOf",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.concat",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, t<'a>) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.unshiftMany",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, array<'a>) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.filter",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => t<'a>",
    "documentation": {"kind": "markdown", "value": " should we use `bool` or `boolean` seems they are intechangeable here "}
  }, {
    "label": "Js.Array2.shift",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => option<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.reduceRight",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('b, 'a) => 'b, 'b) => 'b",
    "documentation": null
  }, {
    "label": "Js.Array2.joinWith",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, string) => string",
    "documentation": null
  }, {
    "label": "Js.Array2.concatMany",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, array<t<'a>>) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.fillInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.isArray",
    "kind": 12,
    "tags": [],
    "detail": "'a => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.reduce",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('b, 'a) => 'b, 'b) => 'b",
    "documentation": null
  }, {
    "label": "Js.Array2.copy",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.reducei",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('b, 'a, int) => 'b, 'b) => 'b",
    "documentation": null
  }, {
    "label": "Js.Array2.forEachi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => unit) => unit",
    "documentation": null
  }, {
    "label": "Js.Array2.fillFromInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a, ~from: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.findi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => option<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.filteri",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.slice",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~start: int, ~end_: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.fromMap",
    "kind": 12,
    "tags": [],
    "detail": "(array_like<'a>, 'a => 'b) => array<'b>",
    "documentation": null
  }, {
    "label": "Js.Array2.removeFromInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~pos: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.from",
    "kind": 12,
    "tags": [],
    "detail": "array_like<'a> => array<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.includes",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => bool",
    "documentation": {"kind": "markdown", "value": " ES2016 "}
  }, {
    "label": "Js.Array2.find",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => option<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.reduceRighti",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('b, 'a, int) => 'b, 'b) => 'b",
    "documentation": null
  }, {
    "label": "Js.Array2.findIndexi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.toLocaleString",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => string",
    "documentation": null
  }, {
    "label": "Js.Array2.lastIndexOfFrom",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a, ~from: int) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.copyWithinFromRange",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~to_: int, ~start: int, ~end_: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.findIndex",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.removeCountInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~pos: int, ~count: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.reverseInPlace",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.every",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.length",
    "kind": 12,
    "tags": [],
    "detail": "array<'a> => int",
    "documentation": null
  }, {
    "label": "Js.Array2.indexOf",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.unshift",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.sortInPlace",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.unsafe_get",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int) => 'a",
    "documentation": null
  }, {
    "label": "Js.Array2.some",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => bool) => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.map",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": null
  }, {
    "label": "Js.Array2.push",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.fillRangeInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a, ~start: int, ~end_: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.pop",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => option<'a>",
    "documentation": {"kind": "markdown", "value": " https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push "}
  }, {
    "label": "Js.Array2.somei",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.append",
    "kind": 12,
    "tags": [1],
    "detail": "(t<'a>, 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "Deprecated: append is not type-safe. Use `concat` instead, and see #1884\n\n"}
  }, {
    "label": "Js.Array2.unsafe_set",
    "kind": 12,
    "tags": [],
    "detail": "(array<'a>, int, 'a) => unit",
    "documentation": null
  }, {
    "label": "Js.Array2.copyWithin",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~to_: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.everyi",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, int) => bool) => bool",
    "documentation": null
  }, {
    "label": "Js.Array2.toString",
    "kind": 12,
    "tags": [],
    "detail": "t<'a> => string",
    "documentation": null
  }, {
    "label": "Js.Array2.spliceInPlace",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~pos: int, ~remove: int, ~add: array<'a>) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.pushMany",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, array<'a>) => int",
    "documentation": null
  }, {
    "label": "Js.Array2.copyWithinFrom",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ~to_: int, ~from: int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.forEach",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => unit) => unit",
    "documentation": null
  }, {
    "label": "Js.Array2.sliceFrom",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.sortInPlaceWith",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, ('a, 'a) => int) => t<'a>",
    "documentation": null
  }, {
    "label": "Js.Array2.indexOfFrom",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a, ~from: int) => int",
    "documentation": null
  }]

