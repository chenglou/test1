{"uri": "Definition.res", "range": "{"start": "{"line": "0", "character": "4"}", "end": "{"line": "0", "character": "6"}"}"}
[{
    "label": "mapReverse",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "`mapReverse xs f`\n\nEquivalent to `reverse (map xs f)`\n\n```ml\nmapReverse [3;4;5] (fun x -> x * x) = [25;16;9];;\n```\n\n\n\nbelt_List.mli:299"}
  }, {
    "label": "makeBy",
    "kind": 12,
    "tags": [],
    "detail": "(int, int => 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "`makeBy n f`\n\n-     return a list of length `n` with element `i` initialized with `f i`\n\n\n-     return the empty list if `n` is negative\n\n\n\n```ml\nmakeBy 5 (fun i -> i) = [0;1;2;3;4];;\nmakeBy 5 (fun i -> i * i) = [0;1;4;9;16];;\n```\n\n\n\nbelt_List.mli:127"}
  }, {
    "label": "make",
    "kind": 12,
    "tags": [],
    "detail": "(int, 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "`make n v`\n\n-     return a list of length `n` with each element filled with value `v`\n\n\n-     return the empty list if `n` is negative\n\n\n\n```ml\nmake 3 1 =  [1;1;1]\n```\n\n\n\nbelt_List.mli:115"}
  }, {
    "label": "mapReverse2U",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, t<'b>, (. 'a, 'b) => 'c) => t<'c>",
    "documentation": {"kind": "markdown", "value": "\nbelt_List.mli:391"}
  }, {
    "label": "map",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, 'a => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "`map xs f`\n\nreturn the list obtained by applying `f` to each element of `xs`\n\n```ml\nmap [1;2] (fun x-> x + 1) = [3;4]\n```\n\n\n\nbelt_List.mli:222"}
  }, {
    "label": "mapWithIndexU",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, (. int, 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nbelt_List.mli:258"}
  }, {
    "label": "mapU",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, (. 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nbelt_List.mli:221"}
  }, {
    "label": "makeByU",
    "kind": 12,
    "tags": [],
    "detail": "(int, (. int) => 'a) => t<'a>",
    "documentation": {"kind": "markdown", "value": "\nbelt_List.mli:126"}
  }, {
    "label": "mapReverse2",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, t<'b>, ('a, 'b) => 'c) => t<'c>",
    "documentation": {"kind": "markdown", "value": "`mapReverse2 xs ys f`\n\nequivalent to `reverse (zipBy xs ys f)`\n\n```ml\nmapReverse2 [1;2;3] [1;2] (+) = [4;2]\n```\n\n\n\nbelt_List.mli:392"}
  }, {
    "label": "mapWithIndex",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, (int, 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "`mapWithIndex xs f` applies `f` to each element of `xs`. Function `f` takes two arguments: the index starting from 0 and the element from `xs`.\n\n```ml\nmapWithIndex [1;2;3] (fun i x -> i + x) =\n[0 + 1; 1 + 2; 2 + 3 ]\n```\n\n\n\nbelt_List.mli:259"}
  }, {
    "label": "mapReverseU",
    "kind": 12,
    "tags": [],
    "detail": "(t<'a>, (. 'a) => 'b) => t<'b>",
    "documentation": {"kind": "markdown", "value": "\nbelt_List.mli:298"}
  }]
